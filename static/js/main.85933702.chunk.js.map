{"version":3,"sources":["components/cardGifs.jsx","components/form.jsx","goGifs.js","App.jsx","index.js"],"names":["CardGifs","props","card","gifs","map","gif","index","react_default","a","createElement","className","key","concat","src","alt","options","title","message","buttons","label","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","search","e","preventDefault","limit","current","value","length","q","chargeNewGifs","confirmAlert","React","createRef","type","placeholder","ref","onClick","Component","goGifs","o","url","process","fetch","App","objFomr","setState","gifsApp","then","response","json","data","g","images","fixed_width","state","query","_this2","components_form","cardGifs","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.85933702.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\n// función que devuelve los gifs encontrados\r\nconst CardGifs = (props) => {\r\n  const card = props.gifs.map((gif, index) =>{\r\n    return(\r\n      <figure className='col s12 m4 l3 offset-m1 container' key={`gif-${index}`}>\r\n        <img className='img-gif' src={gif} alt='gif' />\r\n          <div className='overlay'>\r\n            {/* pinta el nombre del gif o un gif mas si no tiene nombre */}\r\n            <p className='text-name'>{(gif[1]) ? gif[1] : 'un gif más' }</p>\r\n          </div>\r\n      </figure>\r\n    )\r\n  });\r\n  return(\r\n    <div>\r\n      {card}\r\n    </div>\r\n  );\r\n};\r\nexport default CardGifs;","import React, { Component } from 'react';\r\n// importando libreria para la alerta\r\nimport { confirmAlert } from 'react-confirm-alert'; \r\nimport './style.css';\r\nimport './alert.css';\r\n\r\n// objeto que trae la configuración para la alerta\r\nconst options = {\r\n  title: 'Estoy confundido',\r\n  message: 'No sé qué debo buscar, prueba llenar todos los campos :)',\r\n  buttons: [{\r\n    label: ' Ok ',\r\n  }]\r\n};\r\n\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // crea una referencia que puede ser adjunto a los elementos React por medio del atributo ref\r\n    this.q = React.createRef();\r\n    this.limit = React.createRef();\r\n  };\r\n\r\n  // metodo que toma los datos del form y los manda al metodo de busqueda ó manda una alerta de error.\r\n  search = (e) => {\r\n    e.preventDefault();\r\n    if (this.limit.current.value.length > 0 && this.q.current.value.length > 0) {\r\n      this.props.chargeNewGifs({\r\n        q: this.q.current.value,\r\n        limit: this.limit.current.value\r\n      });\r\n    } else {\r\n      confirmAlert(options);\r\n    }\r\n\t}\r\n\r\n  render() {\r\n    const {q, limit} = this;\r\n    return (\r\n      <div>\r\n        <form className='form container'>\r\n          <input type='text' placeholder='Escribe un tema que quieras ver en gif' ref = {q}/>\r\n          <input type='number' placeholder='¿Cuántos gifs quieres ver?' ref = {limit}/>\r\n          <button className='boton btn' onClick={this.search}>Buscar</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","// construcción del endpoint\r\nconst goGifs = (o) => {\r\n  const API_KEY = process.env.REACT_APP_API_KEY;\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${o[0].q}&limit=${o[0].limit}`;\r\n  return fetch(url)\r\n}\r\n\r\nexport default goGifs;","import React, { Component } from 'react';\r\n\r\n// componentes\r\nimport CardGifs from './components/cardGifs';\r\nimport Form from './components/form';\r\n\r\n// llamado a la api\r\nimport goGifs from './goGifs';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      gifsApp: [],\r\n      query: [{\r\n        q: 'cat',\r\n        limit: '5'\r\n      }],\r\n    }\r\n  }\r\n\r\n  // llamado inicial con los 5 gifs de gatitos\r\n  componentDidMount() {\r\n    goGifs(this.state.query)\r\n      .then((response) => response.json())\r\n      .then((gifs) => {\r\n        this.setState({\r\n          gifsApp: gifs.data.map((g) => {\r\n            const gifsApp = [g.images.fixed_width.url, g.title];\r\n            return gifsApp\r\n          })\r\n        });\r\n      });\r\n  }\r\n\r\n  chargeNewGifs = (objFomr) => {\r\n    // limpia el estado para quita resultado anterior de la vista\r\n    this.setState({\r\n      gifsApp: []\r\n    });\r\n    // hace el llamado con los nuevos parametros de busqueda\r\n    goGifs([objFomr])\r\n      .then((response) => response.json())\r\n      .then((gifs) => {\r\n        this.setState({\r\n          gifsApp: gifs.data.map((g) => {\r\n            const gifsApp = [g.images.fixed_width.url, g.title];\r\n            return gifsApp\r\n          })\r\n        });\r\n      });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1>gatitos.gif</h1>\r\n        </header>\r\n        <section>\r\n          <p>Podemos mostrarte otros gifs</p>\r\n          <Form chargeNewGifs={this.chargeNewGifs}/>\r\n        </section>\r\n        <section className='row'>\r\n          <CardGifs gifs={this.state.gifsApp}/>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default App;\r\n","import React from 'react';\nimport {render} from 'react-dom';\nimport App from './App.jsx';\n\n\nrender(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}