{"version":3,"sources":["components/cardGifs.js","goGifs.js","components/form.js","App.js","index.js"],"names":["CardGifs","props","card","gifs","map","gif","index","react_default","a","createElement","className","key","concat","src","alt","goGifs","o","url","process","q","limit","fetch","options","title","message","buttons","label","onClick","console","log","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fn","e","preventDefault","current","value","length","chargeState","confirmAlert","React","createRef","type","placeholder","ref","Component","App","objFomr","setState","gifsApp","then","response","json","data","g","images","fixed_width","state","query","_this2","components_form","cardGifs","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b54e6499.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nconst CardGifs = (props) => {\r\n  const card = props.gifs.map((gif, index) =>{\r\n    return(\r\n      <figure className='col s12 m4 l3 offset-m1 container' key={`gif-${index}`}>\r\n        <img className='img-gif' src={gif} alt='gif' />\r\n          <div className='overlay'>\r\n            <p className='text'>{(gif[1]) ? gif[1] : 'un gif más' }</p>\r\n          </div>\r\n      </figure>\r\n    )\r\n  })\r\n  return(\r\n    <div>\r\n      {card}\r\n    </div>\r\n  );\r\n};\r\nexport default CardGifs;","\r\nconst goGifs = (o) => {\r\n  const API_KEY = process.env.REACT_APP_API_KEY;\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${o[0].q}&limit=${o[0].limit}`;\r\n  return fetch(url)\r\n}\r\n\r\nexport default goGifs;","import React, { Component } from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport './style.css';\r\nimport './alert.css';\r\n\r\n// {\r\n//   title: 'Estoy confundido',\r\n//   message: 'No sé qué debo buscar, podrías poner todos los datos :).',\r\n// }\r\n\r\nconst options = {\r\n  title: 'Estoy confundido',\r\n      message: 'No sé qué debo buscar, podrías poner todos los datos :).',\r\n      buttons: [\r\n        {\r\n          label: 'Oki',\r\n          onClick: () => console.log('boton funciona')\r\n        }\r\n      ]\r\n};\r\n\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.q = React.createRef();\r\n    this.limit = React.createRef();\r\n  };\r\n\r\n  fn = (e) => {\r\n    e.preventDefault();\r\n    if (this.limit.current.value.length > 0 && this.q.current.value.length > 0) {\r\n      this.props.chargeState({\r\n        q: this.q.current.value,\r\n        limit: this.limit.current.value,\r\n      });\r\n    } else {\r\n      confirmAlert(options)\r\n    }\r\n\t}\r\n\r\n  render() {\r\n    const {q, limit} = this;\r\n    return (\r\n      <div>\r\n        <form className='form container'>\r\n          <input className='form-input' type='text' placeholder='Escribe un tema que quieras ver en gif' ref = {q}/>\r\n          <input className='form-input' type='number' placeholder='¿Cuántos gifs quieres ver?' ref = {limit}/>\r\n          <button className='boton btn' onClick={this.fn}> Buscar</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport CardGifs from './components/cardGifs';\r\nimport goGifs from './goGifs';\r\nimport Form from './components/form';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      gifsApp: [],\r\n      query: [{\r\n        q: 'cat',\r\n        limit: '5'\r\n      }],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    goGifs(this.state.query)\r\n      .then((response) => response.json())\r\n      .then((gifs) => {\r\n        this.setState({\r\n          gifsApp: gifs.data.map((g) => {\r\n            const gifsApp = [g.images.fixed_width.url, g.title];\r\n            return gifsApp\r\n          })\r\n        });\r\n      });\r\n  }\r\n\r\n  chargeState = (objFomr) => {\r\n    this.setState({\r\n      gifsApp: []\r\n    });\r\n    goGifs([objFomr])\r\n      .then((response) => response.json())\r\n      .then((gifs) => {\r\n        this.setState({\r\n          gifsApp: gifs.data.map((g) => {\r\n            const gifsApp = [g.images.fixed_width.url, g.title];\r\n            return gifsApp\r\n          })\r\n        });\r\n      });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1>gatitos.gif</h1>\r\n        </header>\r\n        <section>\r\n          <p>Podemos mostrarte otros gifs</p>\r\n          <Form chargeState={this.chargeState}/>\r\n        </section>\r\n        <div className='row'>\r\n          <CardGifs gifs={this.state.gifsApp}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default App;\r\n","import React from 'react';\nimport {render} from 'react-dom';\nimport App from './App';\n\n\nrender(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}